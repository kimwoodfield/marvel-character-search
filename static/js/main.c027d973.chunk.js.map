{"version":3,"sources":["MarvelLogo.svg","App.js","reportWebVitals.js","components/characterCard.js","searchMarvel.js","index.js"],"names":["App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CharacterCard","searchVal","useState","characterData","setCharacterData","useEffect","axios","get","process","response","console","log","data","results","map","character","index","name","thumbnail","path","extension","SearchMarvel","searchMarvelContent","e","a","preventDefault","setSearch","setSearchVal","document","getElementById","value","search","onSubmit","htmlFor","type","placeholder","id","ReactDOM","render","StrictMode"],"mappings":"uMAAe,G,WAAA,IAA0B,wCCa1BA,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,cCKlCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gDC4BCQ,EA7BO,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EAMOC,mBAAS,IANhB,mBAM5BC,EAN4B,KAMbC,EANa,KAiBnC,OATAC,qBAAU,WACNC,IAAMC,IAPW,sEAOQN,EAXlBO,uFAWsCd,MAAK,SAACe,GAC/CC,QAAQC,IAAIF,EAASG,KAAKA,KAAKC,SAC/BT,EAAiBK,EAASG,KAAKA,KAAKC,cAE1C,CAACZ,IAKC,qBAAKd,UAAU,iBAAf,SACCgB,EAAcW,KAAI,SAACC,EAAWC,GAAZ,OACnB,sBAAK7B,UAAU,gBAAf,UACI,6BAAM4B,EAAUE,OAChB,qBAAK7B,IAAG,UAAK2B,EAAUG,UAAUC,KAAzB,YAAiCJ,EAAUG,UAAUE,eAF7BJ,SCvB7B,SAASK,IAEpB,IAAMC,EAAmB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACxBD,EAAEE,iBACFf,QAAQC,IAAI,cACZe,GAAU,GACVC,EAAaC,SAASC,eAAe,eAAeC,OAJ5B,2CAAH,sDAFU,EASP5B,oBAAS,GATF,mBAS5B6B,EAT4B,KASpBL,EAToB,OAUDxB,mBAAS,IAVR,mBAU5BD,EAV4B,KAUjB0B,EAViB,KAanC,OAGI,gCACA,uBAAMxC,UAAU,OAAO6C,SAAUV,EAAjC,UACI,uBAAOnC,UAAU,QAAQ8C,QAAQ,QAAjC,wBACA,uBAAO9C,UAAU,QAAQ+C,KAAK,OAAOjB,KAAK,QAAQkB,YAAY,kBAAkBC,GAAG,gBACnF,wBAAQjD,UAAU,SAAS+C,KAAK,SAAhC,2BAGHH,EACD,cAAE,EAAF,CAAgB9B,UAAWA,IAE3B,2BCtBRoC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,qBAAKpD,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,uCAEF,cAACkC,EAAD,OAEFO,SAASC,eAAe,SAM1BtC,K","file":"static/js/main.c027d973.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MarvelLogo.ce377fd3.svg\";","import './App.css';\nimport logo from './MarvelLogo.svg';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react';\nimport '../index.css';\nimport axios from 'axios';\n\nconst APIKEY = process.env.REACT_APP_APIKEY;\n\nconst CharacterCard = ({searchVal}) => {\n\n    const characterURL = 'https://gateway.marvel.com:443/v1/public/characters?nameStartsWith=';\n\n    // const credentials = '&ts=1&apikey=6871af630ca51742153d2db8dbf10dcb&hash=609bb5211dbf0e54c53e927bb92f5ee7';\n\n    const [characterData, setCharacterData] = useState([]);\n\n    useEffect(() => {\n        axios.get(characterURL + searchVal + APIKEY).then((response) => {\n            console.log(response.data.data.results)\n            setCharacterData(response.data.data.results);\n        })\n    },[searchVal])\n\n\n\n    return (\n        <div className=\"card-container\">\n        {characterData.map((character, index) => \n        <div className=\"characterCard\" key={index}>\n            <h2>{ character.name }</h2>\n            <img src={`${character.thumbnail.path}.${character.thumbnail.extension}` }/>\n        </div>\n        )}\n        </div>\n    )\n}\n\nexport default CharacterCard;","import React, { useEffect, useState } from \"react\";\nimport CharacterCard from './components/characterCard';\n\nexport default function SearchMarvel() {\n\n    const searchMarvelContent = async (e) => {\n        e.preventDefault();\n        console.log(\"submitting\");\n        setSearch(true);\n        setSearchVal(document.getElementById('searchInput').value);\n    }\n\n    const [search, setSearch] = useState(false);\n    const [searchVal, setSearchVal] = useState('');\n\n\n    return (  \n\n\n        <div>\n        <form className=\"form\" onSubmit={searchMarvelContent} >\n            <label className=\"label\" htmlFor=\"query\">Comic Name</label>\n            <input className=\"input\" type=\"text\" name=\"query\" placeholder=\"i.e. Spider-Man\" id=\"searchInput\"></input>\n            <button className=\"button\" type=\"submit\">Characters</button> \n        </form>\n\n        {search ? \n        < CharacterCard searchVal={searchVal} /> \n        : \n        <div></div>}\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SearchMarvel from './searchMarvel';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <div className=\"container\">\n      <h1 className=\"title\">Marvel Character Search</h1>\n    </div>\n    <SearchMarvel />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}